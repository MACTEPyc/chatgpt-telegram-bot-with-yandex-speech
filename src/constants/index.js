export const supportedLangs = ['en', 'ru'];

export const langDefault = ['ru'];

// –ê–∫–∫–∞—É–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–∏—Å–∞—Ç—å —ç—Ç–æ–º—É –±–æ—Ç—É, –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã–µ —á–µ—Ä–µ–∑ , (–±–µ–∑ @) –≤ .env —Ñ–∞–π–ª–µ
// –ï—Å–ª–∏ ACCOUNTS_WHITE_LIST –ø—É—Å—Ç–∞—è - –±–æ—Ç –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –≤—Å–µ–º
export const accounts = (process.env.ACCOUNTS_WHITE_LIST || '').trim().split(',');

console.log('accounts', accounts)
export const roles = {
    System: 'system',
    User: 'user',
    Assistant: 'assistant', 
};

export const characters = {
    programmer: 'programmer',
    designer: 'designer',
    buddy: 'buddy',
    languageTeacher: 'languageTeacher',
};

export const languageButtons = [
    { text: 'üá∫üá∏ English', callback_data: 'en' },
    { text: 'üá∑üá∫ –†—É—Å—Å–∫–∏–π', callback_data: 'ru' },
];

/**
 * –ò–∑–Ω–∞—á–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è ChatGpt
 * 
 * –∑–∞–¥–∞–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é —Ä–æ–ª–∏ system
 * https://platform.openai.com/docs/guides/chat/introduction
 * 
 * @param {import('i18next').t} t 
 * @param {Record<string, any>} interpolation 
 * @returns {Record<string, Array<{ role: string, content: string  }>>}
 */
export const getAssistantContext = (t, interpolation = {}) => ({
    [characters.programmer]: [
        { role: roles.System, content: t('characters.programmer.context', interpolation) },
    ],
    [characters.designer]: [
        { role: roles.System, content: t('characters.designer.context', interpolation) },
    ],
    [characters.buddy]: [
        { role: roles.System, content: t('characters.buddy.context', interpolation) },
    ],
    [characters.languageTeacher]: [
        { role: roles.System, content: t('characters.languageTeacher.context', interpolation) },
    ],
});

/**
 * –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –æ—Ç—ã–≥—Ä—ã–≤–∞—Ç—å chat GPT,
 * –µ–≥–æ –Ω—É–∂–Ω–æ –æ–ø–∏—Å–∞—Ç—å –∏ –≤ assistantContext –∏ –≤ charactersButtons
 * 
 * @param {import('i18next').t} t
 * @param {'ru' | 'en'} lang
 */
export const getCharactersButtons = (t, lang) => {
    const buttons = [
        [ { text: t('characters.programmer.button'), callback_data: characters.programmer }],
        [ { text: t('characters.designer.button'), callback_data: characters.designer }],
        [ { text: t('characters.buddy.button'), callback_data: characters.buddy }],
    ];

    /**
     * –¢–∞–∫ –∫–∞–∫ chat gpt 3.5 –Ω–æ—Ä–º–∞–ª—å–Ω–æ —É–º–µ–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π,
     * —Ç–æ –ø–æ–∫–∞ –æ–Ω —Ç–æ–ª—å–∫–æ —É—á–∏—Ç–µ–ª—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –∏ –±–æ–ª—å—à–µ –Ω–∏–∫–∞–∫–æ–≥–æ –¥—Ä—É–≥–æ–≥–æ
     */
    if (lang == 'ru') {
        buttons.push([ { text: t('characters.languageTeacher.button'), callback_data: characters.languageTeacher }],)
    }
    return buttons;
};

export const characterDefault = characters.programmer;
